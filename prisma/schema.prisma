generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL") // uses connection pooling
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@map("sessions")
}
 
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]
  properties    Property[]

  @@map("users")
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Property {
  id          String     @id @default(cuid())
  type        PropertyType
  width       Int
  height      Int
  noBeds      Int
  noBathrooms Int
  published   Boolean    @default(false)
  address     String
  name        String
  price       Int
  contentUrl  String
  imageUrl    String
  thumbnailUrl String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  creator     User       @relation(fields: [creatorId], references: [id])
  creatorId   String

  @@map("property")
}

enum PropertyType {
  APARTMENT
  REAL_ESTATE
  HOTEL
}